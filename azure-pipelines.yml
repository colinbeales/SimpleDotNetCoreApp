# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

#pool:
#  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: 'BuildAndPublish'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
#    - task: NuGetToolInstaller@1

#    - task: NuGetCommand@2
#      inputs:
#        restoreSolution: '$(solution)'

#    - task: VSBuild@1
#      inputs:
#        solution: '$(solution)'
#        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
#        platform: '$(buildPlatform)'
#        configuration: '$(buildConfiguration)'

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

#    - task: VSTest@2
#      inputs:
#        testSelector: 'testAssemblies'
#        testAssemblyVer2: |
#          **\*SimpleDotNetCoreApp.Tests*.dll
#          !**\*TestAdapter.dll
#          !**\obj\**
#        searchFolder: '$(System.DefaultWorkingDirectory)'

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*[Tt]ests/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Pipeline.Workspace)'
        zipAfterPublish: True
  
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Pipeline.Workspace)'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
         SimpleDotNetCoreApp.ARM/**
         SimpleDotNetCoreApp.Selenium/bin/Release/**
        TargetFolder: '$(Pipeline.Workspace)'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'drop'